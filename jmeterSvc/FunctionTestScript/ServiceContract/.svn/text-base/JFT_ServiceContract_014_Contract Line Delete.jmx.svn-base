<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1 r1853635">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="JFT_ServiceContract_014_Contract End Line - Delete" enabled="true">
      <stringProp name="TestPlan.comments">other cases is covered in 013 delete contract header</stringProp>
      <boolProp name="TestPlan.functional_mode">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="domain" elementType="Argument">
            <stringProp name="Argument.name">domain</stringProp>
            <stringProp name="Argument.value">10USA</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="server" elementType="Argument">
            <stringProp name="Argument.name">server</stringProp>
            <stringProp name="Argument.value">vmlfeg0001.qad.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="tomcatPort" elementType="Argument">
            <stringProp name="Argument.name">tomcatPort</stringProp>
            <stringProp name="Argument.value">22011</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="webapp" elementType="Argument">
            <stringProp name="Argument.name">webapp</stringProp>
            <stringProp name="Argument.value">qad-central</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CustomerQuoteNumber" elementType="Argument">
            <stringProp name="Argument.name">CustomerQuoteNumber</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="netui_port" elementType="Argument">
            <stringProp name="Argument.name">netui_port</stringProp>
            <stringProp name="Argument.value">22000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="SetUpEnvironment" enabled="true">
        <stringProp name="filename">..\..\CSV\LogIn.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames"></stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">JDBC</stringProp>
        <stringProp name="dbUrl">${dbUrl}</stringProp>
        <stringProp name="driver">com.ddtek.jdbc.openedge.OpenEdgeDriver</stringProp>
        <stringProp name="initQuery"></stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password"></stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${dbuser}</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="domainCode" elementType="Argument">
            <stringProp name="Argument.name">domainCode</stringProp>
            <stringProp name="Argument.value">10USA</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">test</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="username" elementType="Argument">
            <stringProp name="Argument.name">username</stringProp>
            <stringProp name="Argument.value">test</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dbUrl" elementType="Argument">
            <stringProp name="Argument.name">dbUrl</stringProp>
            <stringProp name="Argument.value">${__P(dbUrl,jdbc:datadirect:openedge://vmlfeg0001.qad.com:22189;DatabaseName=mfgdb)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dbuser" elementType="Argument">
            <stringProp name="Argument.name">dbuser</stringProp>
            <stringProp name="Argument.value">${__P(dbuser,devel)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
      </CookieManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="Content-Type" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">~/log/${__TestPlanName}_${__time(YMDHMS)}.xml</stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="delete contract line and end user successfully" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1479226785000</longProp>
        <longProp name="ThreadGroup.end_time">1479226785000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">including delete end user before delete line</stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">${tomcatPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1.001 - Web UI - LogIn" enabled="true">
          <stringProp name="IncludeController.includepath">../../TestFragement/Common/Login-Fragment.jmx</stringProp>
        </IncludeController>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">~/log/${__TestPlanName}_${__time(YMDHMS)}.xml</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree errors only" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.002 - Create Service Contract Header" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Set value for create header" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="script">vars.put(&quot;serviceContract_customerCode&quot;, &quot;10c1001&quot;);
vars.put(&quot;serviceContract_serviceType&quot;, &quot;std&quot;);
vars.put(&quot;serviceContract_purchaseOrder&quot;, &quot;po014&quot;);
vars.put(&quot;serviceContract_startDate&quot;, &quot;2019-07-01T00:00:00.000Z&quot;);
vars.put(&quot;serviceContract_endDate&quot;, &quot;2020-06-30T00:00:00.000Z&quot;);
vars.put(&quot;serviceContract_visits&quot;, &quot;12&quot;);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1.002 - Create Service Contract Header-001-Create" enabled="true">
            <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_CreateServiceContractHeader.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.003 - Create Contract Line 02002" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Create Contract Line 02002" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="script">vars.put(&quot;contractLine_endUserNumber&quot;, &quot;10C1001&quot;);
vars.put(&quot;contractLine_supportedItem&quot;, &quot;02002&quot;);
vars.put(&quot;contractLine_itemQuantity&quot;, &quot;2&quot;);
vars.put(&quot;contractLine_lotSerial&quot;, &quot;${__time()}&quot; );
vars.put(&quot;contractLine_isPreventiveMaintenanceItem&quot;, true );
//vars.put(&quot;contractLine_visits&quot;, 6 );

//contractLine
</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create Contract Line 02002 2" enabled="true">
            <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_CreateContractLine.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.004 - Create Contract Line Lot/Serial" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Create Contract Line Lot/Serial" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="script">vars.put(&quot;contractLine_contractNumber&quot;, &quot;${nextContractNbr}&quot;);
vars.put(&quot;contractLine_contractLine&quot;, &quot;${contractLine}&quot; );
vars.put(&quot;contractLine_i_referenceCode&quot;, null);
vars.put(&quot;contractLine_s_lotSerialCode&quot;, &quot;${__time()}&quot; );
vars.put(&quot;contractLine_s_dataOperation&quot;, &quot;C&quot;);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create Contract Line Lot/Serial ${contractLine_s_lotSerialCode}" enabled="true">
            <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_CreateContractLineLotSerialPanel.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.005 - Create Contract Line Lot/Serial" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Create Contract Line Lot/Serial" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="script">vars.put(&quot;contractLine_contractNumber&quot;, &quot;${nextContractNbr}&quot;);
vars.put(&quot;contractLine_contractLine&quot;, &quot;${contractLine}&quot; );
vars.put(&quot;contractLine_i_referenceCode&quot;, null);
vars.put(&quot;contractLine_s_lotSerialCode&quot;, &quot;${__time()}&quot; );
vars.put(&quot;contractLine_s_dataOperation&quot;, &quot;C&quot;);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create Contract Line Lot/Serial ${contractLine_s_lotSerialCode}" enabled="true">
            <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_CreateContractLineLotSerialPanel.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.006 - Create Line coverage limit" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Create Line coverage limit" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="script">vars.put(&quot;ContractLine_contractNumber&quot;, &quot;${nextContractNbr}&quot;);
vars.put(&quot;ContractLine_Limit_startDate&quot;, &quot;2019-07-01T00:00:00.000Z&quot;);
vars.put(&quot;ContractLine_Limit_endDate&quot;, &quot;2020-06-30T00:00:00.000Z&quot;);
vars.put(&quot;ContractLine_Limit_limitTypeDisplayValue&quot;, &quot;LTT&quot;);
vars.put(&quot;ContractLine_Limit_limitAmount&quot;, &quot;1000&quot;);
vars.put(&quot;ContractLine_Limit_percentCovered&quot;, &quot;100&quot;);
vars.put(&quot;ContractLine_Limit_fileType&quot;, &quot;sa_mstr&quot;);
vars.put(&quot;ContractLine_Limit_dataOperation&quot;, &quot;C&quot;);
vars.put(&quot;ContractLine_Limit_contractLine&quot;, &quot;${contractLine}&quot;);
vars.put(&quot;ContractLine_Limit_limitType&quot;, &quot;T&quot;);

//contractLine
</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create Line coverage limit" enabled="true">
            <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_CreateContractLineCoverageLimit.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.007 - field change visits to add PM Schedules" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="field change visits to add PM Schedules" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="script">vars.put(&quot;contractLine_fieldValue&quot;, &quot;6&quot;);
vars.put(&quot;contractLine_url_fieldName&quot;, &quot;visits&quot;);

//contractLine
</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="field change visits to add PM Schedules" enabled="true">
            <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_ContractLine_fieldChange.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.008 - Line Save" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Line Save" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="script">vars.put(&quot;contractLine_contractLine&quot;, &quot;${contractLine}&quot;);
vars.put(&quot;contractLine_contractNumber&quot;, &quot;${nextContractNbr}&quot;);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Line Save" enabled="true">
            <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_ContractLine_Update.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.009 - final save Header" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Header Fetch" enabled="true"/>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Header Fetch" enabled="true">
              <stringProp name="scriptLanguage">javascript</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="script">vars.put(&quot;serviceContract_contract&quot;, &quot;${nextContractNbr}&quot;);</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Header Fetch" enabled="true">
              <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_ServiceContractHeader_Fetch.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Header Save" enabled="true"/>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Header Save" enabled="true">
              <stringProp name="scriptLanguage">javascript</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="script">vars.put(&quot;serviceContract_update_i_isProcessContractSummary&quot;, 1);
vars.put(&quot;serviceContract_update_i_isProcessPostTrailer&quot;, 1);
vars.put(&quot;serviceContract_contract&quot;, &quot;${nextContractNbr}&quot;);
vars.put(&quot;serviceContract_prefix&quot;, &quot;C&quot;);
vars.put(&quot;serviceContract_uri&quot;, &quot;urn:be:com.qad.service.contract.IServiceContractHeader&quot;);</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Header Save" enabled="true">
              <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_ServiceContractHeader_Save.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.010 - Verify not delete" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Verify not delete Lot/Serial" enabled="true">
            <stringProp name="dataSource">JDBC</stringProp>
            <stringProp name="query">SELECT * FROM pub.sar_mstr where sar_nbr= ? with (nolock)</stringProp>
            <stringProp name="queryArguments">${nextContractNbr}</stringProp>
            <stringProp name="queryArgumentsTypes">VARCHAR</stringProp>
            <stringProp name="queryTimeout">10000</stringProp>
            <stringProp name="queryType">Prepared Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as Object</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">result</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="scriptLanguage">javascript</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="script">var failureMessage = &quot;&quot;;

if(${result_#}!= 2)
	failureMessage = failureMessage + &quot;Expect sar_mstr(Lot/Serial) amount is 2, but got ${result_#}.\n&quot;;

AssertionResult.setFailureMessage(failureMessage);
AssertionResult.setFailure(failureMessage != &quot;&quot;);</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Verify not delete Coverage" enabled="true">
            <stringProp name="dataSource">JDBC</stringProp>
            <stringProp name="query">SELECT * FROM pub.sal_mstr where sal_nbr= ? with (nolock)</stringProp>
            <stringProp name="queryArguments">${nextContractNbr}</stringProp>
            <stringProp name="queryArgumentsTypes">VARCHAR</stringProp>
            <stringProp name="queryTimeout">10000</stringProp>
            <stringProp name="queryType">Prepared Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as Object</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">result</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="scriptLanguage">javascript</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="script">var failureMessage = &quot;&quot;;

if(${result_#}!= 1)
	failureMessage = failureMessage + &quot;Expect sal_mstr(Coverage) amount is 1, but got ${result_#}.\n&quot;;

AssertionResult.setFailureMessage(failureMessage);
AssertionResult.setFailure(failureMessage != &quot;&quot;);</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Verify not delete line" enabled="true">
            <stringProp name="dataSource">JDBC</stringProp>
            <stringProp name="query">SELECT * FROM pub.sad_det where sad_nbr= ? with (nolock)</stringProp>
            <stringProp name="queryArguments">${nextContractNbr}</stringProp>
            <stringProp name="queryArgumentsTypes">VARCHAR</stringProp>
            <stringProp name="queryTimeout">10000</stringProp>
            <stringProp name="queryType">Prepared Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as Object</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">result</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="scriptLanguage">javascript</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="script">var failureMessage = &quot;&quot;;

if(${result_#}!= 2)
	failureMessage = failureMessage + &quot;Expect sad_det(Line) amount is 2, but got ${result_#}.\n&quot;;

AssertionResult.setFailureMessage(failureMessage);
AssertionResult.setFailure(failureMessage != &quot;&quot;);</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Verify not delete tax" enabled="true">
            <stringProp name="dataSource">JDBC</stringProp>
            <stringProp name="query">SELECT * FROM pub.tx2d_det where tx2d_ref = ? with (nolock)</stringProp>
            <stringProp name="queryArguments">${nextContractNbr}</stringProp>
            <stringProp name="queryArgumentsTypes">VARCHAR</stringProp>
            <stringProp name="queryTimeout">10000</stringProp>
            <stringProp name="queryType">Prepared Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as Object</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">result</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="scriptLanguage">javascript</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="script">var failureMessage = &quot;&quot;;

if(${result_#}!= 1)
	failureMessage = failureMessage + &quot;Expect tx2d_det(Tax) amount is 1, but got ${result_#}.\n&quot;;

AssertionResult.setFailureMessage(failureMessage);
AssertionResult.setFailure(failureMessage != &quot;&quot;);</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Verify not delete PM" enabled="true">
            <stringProp name="dataSource">JDBC</stringProp>
            <stringProp name="query">SELECT * FROM pub.sap_det where sap_nbr= ? with (nolock)</stringProp>
            <stringProp name="queryArguments">${nextContractNbr}</stringProp>
            <stringProp name="queryArgumentsTypes">VARCHAR</stringProp>
            <stringProp name="queryTimeout">10000</stringProp>
            <stringProp name="queryType">Prepared Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as Object</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">result</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="scriptLanguage">javascript</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="script">var failureMessage = &quot;&quot;;

if(${result_#}!= 18)
	failureMessage = failureMessage + &quot;Expect sap_det(Line) amount is 18, but got ${result_#}.\n&quot;;

AssertionResult.setFailureMessage(failureMessage);
AssertionResult.setFailure(failureMessage != &quot;&quot;);</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname=" 1.011 - Delete end user" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Set value for delete end User" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="script">vars.put(&quot;endUser_endUserCode&quot;,&quot;10C1001&quot;);
vars.put(&quot;endUser_contractNumber&quot;,&quot;${nextContractNbr}&quot;);
vars.put(&quot;endUser_error&quot;,&quot;Delete not allowed.  Service contract line found for this end user.&quot;);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete end user line" enabled="true">
            <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_EndUser_Delete.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.012 - Delete the line" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Set value for delete line" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="script">vars.put(&quot;contractLine_contractNumber&quot;,&quot;${nextContractNbr}&quot;);
vars.put(&quot;contractLine_contractLine&quot;,&quot;${contractLine}&quot;);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete Line 1" enabled="true">
            <stringProp name="IncludeController.includepath">../../TestFragement\ServiceContract/Fragement_ServiceContractLineDelete.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.013 - final save Header" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Header Fetch" enabled="true"/>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Header Fetch" enabled="true">
              <stringProp name="scriptLanguage">javascript</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="script">vars.put(&quot;serviceContract_contract&quot;, &quot;${nextContractNbr}&quot;);</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Header Fetch" enabled="true">
              <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_ServiceContractHeader_Fetch.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Header Save" enabled="true"/>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Header Save" enabled="true">
              <stringProp name="scriptLanguage">javascript</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="script">vars.put(&quot;serviceContract_update_i_isProcessContractSummary&quot;, 1);
vars.put(&quot;serviceContract_update_i_isProcessPostTrailer&quot;, 1);
vars.put(&quot;serviceContract_contract&quot;, &quot;${nextContractNbr}&quot;);
vars.put(&quot;serviceContract_prefix&quot;, &quot;C&quot;);
vars.put(&quot;serviceContract_uri&quot;, &quot;urn:be:com.qad.service.contract.IServiceContractHeader&quot;);</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Header Save" enabled="true">
              <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_ServiceContractHeader_Save.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.014 - Verify delete" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Verify delete Lot/Serial" enabled="true">
            <stringProp name="dataSource">JDBC</stringProp>
            <stringProp name="query">SELECT * FROM pub.sar_mstr where sar_nbr= ? with (nolock)</stringProp>
            <stringProp name="queryArguments">${nextContractNbr}</stringProp>
            <stringProp name="queryArgumentsTypes">VARCHAR</stringProp>
            <stringProp name="queryTimeout">10000</stringProp>
            <stringProp name="queryType">Prepared Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as Object</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">result</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="scriptLanguage">javascript</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="script">var failureMessage = &quot;&quot;;

if(${result_#}!= 0)
	failureMessage = failureMessage + &quot;Expect sar_mstr(Lot/Serial) amount is 0, but got ${result_#}.\n&quot;;

AssertionResult.setFailureMessage(failureMessage);
AssertionResult.setFailure(failureMessage != &quot;&quot;);</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Verify delete Coverage" enabled="true">
            <stringProp name="dataSource">JDBC</stringProp>
            <stringProp name="query">SELECT * FROM pub.sal_mstr where sal_nbr= ? with (nolock)</stringProp>
            <stringProp name="queryArguments">${nextContractNbr}</stringProp>
            <stringProp name="queryArgumentsTypes">VARCHAR</stringProp>
            <stringProp name="queryTimeout">10000</stringProp>
            <stringProp name="queryType">Prepared Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as Object</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">result</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="scriptLanguage">javascript</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="script">var failureMessage = &quot;&quot;;

if(${result_#}!= 0)
	failureMessage = failureMessage + &quot;Expect sal_mstr(Coverage) amount is 0, but got ${result_#}.\n&quot;;

AssertionResult.setFailureMessage(failureMessage);
AssertionResult.setFailure(failureMessage != &quot;&quot;);</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Verify delete line" enabled="true">
            <stringProp name="dataSource">JDBC</stringProp>
            <stringProp name="query">SELECT * FROM pub.sad_det where sad_nbr= ? with (nolock)</stringProp>
            <stringProp name="queryArguments">${nextContractNbr}</stringProp>
            <stringProp name="queryArgumentsTypes">VARCHAR</stringProp>
            <stringProp name="queryTimeout">10000</stringProp>
            <stringProp name="queryType">Prepared Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as Object</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">result</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="scriptLanguage">javascript</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="script">var failureMessage = &quot;&quot;;

if(${result_#}!= 1) //end User line
	failureMessage = failureMessage + &quot;Expect sad_det(Line) amount is 0, but got ${result_#}.\n&quot;;

AssertionResult.setFailureMessage(failureMessage);
AssertionResult.setFailure(failureMessage != &quot;&quot;);</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Verify delete tax" enabled="true">
            <stringProp name="dataSource">JDBC</stringProp>
            <stringProp name="query">SELECT * FROM pub.tx2d_det where tx2d_ref = ? with (nolock)</stringProp>
            <stringProp name="queryArguments">${nextContractNbr}</stringProp>
            <stringProp name="queryArgumentsTypes">VARCHAR</stringProp>
            <stringProp name="queryTimeout">10000</stringProp>
            <stringProp name="queryType">Prepared Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as Object</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">result</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="scriptLanguage">javascript</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="script">var failureMessage = &quot;&quot;;

if(${result_#}!= 0)
	failureMessage = failureMessage + &quot;Expect tx2d_det(Tax) amount is 0, but got ${result_#}.\n&quot;;

AssertionResult.setFailureMessage(failureMessage);
AssertionResult.setFailure(failureMessage != &quot;&quot;);</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Verify delete PM" enabled="true">
            <stringProp name="dataSource">JDBC</stringProp>
            <stringProp name="query">SELECT * FROM pub.sap_det where sap_nbr= ? with (nolock)</stringProp>
            <stringProp name="queryArguments">${nextContractNbr}</stringProp>
            <stringProp name="queryArgumentsTypes">VARCHAR</stringProp>
            <stringProp name="queryTimeout">10000</stringProp>
            <stringProp name="queryType">Prepared Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as Object</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">result</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="scriptLanguage">javascript</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="script">var failureMessage = &quot;&quot;;

if(${result_#}!= 12)//end user pm schedule
	failureMessage = failureMessage + &quot;Expect sap_det(Line) amount is 0, but got ${result_#}.\n&quot;;

AssertionResult.setFailureMessage(failureMessage);
AssertionResult.setFailure(failureMessage != &quot;&quot;);</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.015 - Delete end user" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Set value for delete end User" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="script">vars.put(&quot;endUser_endUserCode&quot;,&quot;10C1001&quot;);
vars.put(&quot;endUser_contractNumber&quot;,&quot;${nextContractNbr}&quot;);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete end user line" enabled="true">
            <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_EndUser_Delete.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.016 - final save Header" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Header Fetch" enabled="true"/>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Header Fetch" enabled="true">
              <stringProp name="scriptLanguage">javascript</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="script">vars.put(&quot;serviceContract_contract&quot;, &quot;${nextContractNbr}&quot;);</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Header Fetch" enabled="true">
              <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_ServiceContractHeader_Fetch.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Header Save" enabled="true"/>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Header Save" enabled="true">
              <stringProp name="scriptLanguage">javascript</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="script">vars.put(&quot;serviceContract_update_i_isProcessContractSummary&quot;, 1);
vars.put(&quot;serviceContract_update_i_isProcessPostTrailer&quot;, 1);
vars.put(&quot;serviceContract_contract&quot;, &quot;${nextContractNbr}&quot;);
vars.put(&quot;serviceContract_prefix&quot;, &quot;C&quot;);
vars.put(&quot;serviceContract_uri&quot;, &quot;urn:be:com.qad.service.contract.IServiceContractHeader&quot;);</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Header Save" enabled="true">
              <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_ServiceContractHeader_Save.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.017 - Verify delete" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Verify delete Lot/Serial" enabled="true">
            <stringProp name="dataSource">JDBC</stringProp>
            <stringProp name="query">SELECT * FROM pub.sar_mstr where sar_nbr= ? with (nolock)</stringProp>
            <stringProp name="queryArguments">${nextContractNbr}</stringProp>
            <stringProp name="queryArgumentsTypes">VARCHAR</stringProp>
            <stringProp name="queryTimeout">10000</stringProp>
            <stringProp name="queryType">Prepared Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as Object</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">result</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="scriptLanguage">javascript</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="script">var failureMessage = &quot;&quot;;

if(${result_#}!= 0)
	failureMessage = failureMessage + &quot;Expect sar_mstr(Lot/Serial) amount is 0, but got ${result_#}.\n&quot;;

AssertionResult.setFailureMessage(failureMessage);
AssertionResult.setFailure(failureMessage != &quot;&quot;);</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Verify delete Coverage" enabled="true">
            <stringProp name="dataSource">JDBC</stringProp>
            <stringProp name="query">SELECT * FROM pub.sal_mstr where sal_nbr= ? with (nolock)</stringProp>
            <stringProp name="queryArguments">${nextContractNbr}</stringProp>
            <stringProp name="queryArgumentsTypes">VARCHAR</stringProp>
            <stringProp name="queryTimeout">10000</stringProp>
            <stringProp name="queryType">Prepared Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as Object</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">result</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="scriptLanguage">javascript</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="script">var failureMessage = &quot;&quot;;

if(${result_#}!= 0)
	failureMessage = failureMessage + &quot;Expect sal_mstr(Coverage) amount is 0, but got ${result_#}.\n&quot;;

AssertionResult.setFailureMessage(failureMessage);
AssertionResult.setFailure(failureMessage != &quot;&quot;);</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Verify delete line" enabled="true">
            <stringProp name="dataSource">JDBC</stringProp>
            <stringProp name="query">SELECT * FROM pub.sad_det where sad_nbr= ? with (nolock)</stringProp>
            <stringProp name="queryArguments">${nextContractNbr}</stringProp>
            <stringProp name="queryArgumentsTypes">VARCHAR</stringProp>
            <stringProp name="queryTimeout">10000</stringProp>
            <stringProp name="queryType">Prepared Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as Object</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">result</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="scriptLanguage">javascript</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="script">var failureMessage = &quot;&quot;;

if(${result_#}!= 0)
	failureMessage = failureMessage + &quot;Expect sad_det(Line) amount is 0, but got ${result_#}.\n&quot;;

AssertionResult.setFailureMessage(failureMessage);
AssertionResult.setFailure(failureMessage != &quot;&quot;);</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Verify delete tax" enabled="true">
            <stringProp name="dataSource">JDBC</stringProp>
            <stringProp name="query">SELECT * FROM pub.tx2d_det where tx2d_ref = ? with (nolock)</stringProp>
            <stringProp name="queryArguments">${nextContractNbr}</stringProp>
            <stringProp name="queryArgumentsTypes">VARCHAR</stringProp>
            <stringProp name="queryTimeout">10000</stringProp>
            <stringProp name="queryType">Prepared Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as Object</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">result</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="scriptLanguage">javascript</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="script">var failureMessage = &quot;&quot;;

if(${result_#}!= 0)
	failureMessage = failureMessage + &quot;Expect tx2d_det(Tax) amount is 0, but got ${result_#}.\n&quot;;

AssertionResult.setFailureMessage(failureMessage);
AssertionResult.setFailure(failureMessage != &quot;&quot;);</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Verify delete PM" enabled="true">
            <stringProp name="dataSource">JDBC</stringProp>
            <stringProp name="query">SELECT * FROM pub.sap_det where sap_nbr= ? with (nolock)</stringProp>
            <stringProp name="queryArguments">${nextContractNbr}</stringProp>
            <stringProp name="queryArgumentsTypes">VARCHAR</stringProp>
            <stringProp name="queryTimeout">10000</stringProp>
            <stringProp name="queryType">Prepared Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as Object</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">result</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="scriptLanguage">javascript</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="script">var failureMessage = &quot;&quot;;

if(${result_#}!= 0)
	failureMessage = failureMessage + &quot;Expect sap_det(Line) amount is 0, but got ${result_#}.\n&quot;;

AssertionResult.setFailureMessage(failureMessage);
AssertionResult.setFailure(failureMessage != &quot;&quot;);</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Contract coverage limit on end user already been used/consumed cannot be deleted" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1479226785000</longProp>
        <longProp name="ThreadGroup.end_time">1479226785000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Error validations on fields update</stringProp>
      </ThreadGroup>
      <hashTree>
        <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="2.001 - Web UI - LogIn" enabled="true">
          <stringProp name="IncludeController.includepath">../../TestFragement/Common/Login-Fragment.jmx</stringProp>
        </IncludeController>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">~/log/${__TestPlanName}_${__time(YMDHMS)}.xml</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree errors only" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="2.002 - Create Service Contract Header" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Set value for create header" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="script">vars.put(&quot;serviceContract_customerCode&quot;, &quot;10c1001&quot;);
vars.put(&quot;serviceContract_serviceType&quot;, &quot;std&quot;);
//vars.put(&quot;serviceContract_creditTerms&quot;, &quot;kterm&quot;);
vars.put(&quot;serviceContract_purchaseOrder&quot;, &quot;po013&quot;);
vars.put(&quot;serviceContract_startDate&quot;, &quot;2019-07-01T00:00:00.000Z&quot;);
vars.put(&quot;serviceContract_endDate&quot;, &quot;2020-06-30T00:00:00.000Z&quot;);
//vars.put(&quot;serviceContract_revenueType&quot;, 3);
//vars.put(&quot;serviceContract_isBillArrears&quot;, true);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1.002 - Create Service Contract Header-001-Create" enabled="true">
            <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_CreateServiceContractHeader.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="2.003 - Create Line 02002" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Create Contract Line 02002" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="script">vars.put(&quot;contractLine_endUserNumber&quot;, &quot;10C1001&quot;);
vars.put(&quot;contractLine_supportedItem&quot;, &quot;02002&quot;);
//vars.put(&quot;contractLine_itemQuantity&quot;, &quot;12&quot;);
var temp = &quot;${__time()}&quot;;
vars.put(&quot;contractLine_lotSerial&quot;, temp );
vars.put(&quot;lotSerial&quot;, temp );
//contractLine
</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create Contract Line ${lotSerial}" enabled="true">
            <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_CreateContractLine.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="2.004 - Createend user coverage limit" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Create end user coverage limit" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="script">vars.put(&quot;endUser_contractNumber&quot;, &quot;${nextContractNbr}&quot;);
vars.put(&quot;endUser_endUserCode&quot;, &quot;10C1001&quot;);
vars.put(&quot;endUser_Limit_startDate&quot;, &quot;2019-07-01T00:00:00.000Z&quot;);
vars.put(&quot;endUser_Limit_endDate&quot;, &quot;2020-06-30T00:00:00.000Z&quot;);
vars.put(&quot;endUser_Limit_limitTypeDisplayValue&quot;, &quot;LTT&quot;);
vars.put(&quot;endUser_Limit_limitAmount&quot;, &quot;1000&quot;);
vars.put(&quot;endUser_Limit_percentCovered&quot;, &quot;100&quot;);
vars.put(&quot;endUser_Limit_fileType&quot;, &quot;sa_mstr&quot;);
vars.put(&quot;endUser_Limit_dataOperation&quot;, &quot;C&quot;);
vars.put(&quot;endUser_Limit_limitType&quot;, &quot;T&quot;);

//contractLine
</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create end user coverage limit" enabled="true">
            <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_CreateEndUserCoverageLimit.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="2.005 - final save Header" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Header Fetch" enabled="true"/>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Header Fetch" enabled="true">
              <stringProp name="scriptLanguage">javascript</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="script">vars.put(&quot;serviceContract_contract&quot;, &quot;${nextContractNbr}&quot;);</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Header Fetch" enabled="true">
              <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_ServiceContractHeader_Fetch.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Header Save" enabled="true"/>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Header Save" enabled="true">
              <stringProp name="scriptLanguage">javascript</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="script">vars.put(&quot;serviceContract_update_i_isProcessContractSummary&quot;, 1);
vars.put(&quot;serviceContract_update_i_isProcessPostTrailer&quot;, 1);
vars.put(&quot;serviceContract_contract&quot;, &quot;${nextContractNbr}&quot;);
vars.put(&quot;serviceContract_prefix&quot;, &quot;C&quot;);
vars.put(&quot;serviceContract_uri&quot;, &quot;urn:be:com.qad.service.contract.IServiceContractHeader&quot;);</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Header Save" enabled="true">
              <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_ServiceContractHeader_Save.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="2.006 - Create Service Order" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Create Service Order" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="script">vars.put(&quot;serviceOrderHeader_endUserCode&quot;, &quot;10C1001&quot;);
vars.put(&quot;serviceOrderHeader_workCode&quot;, &quot;3001&quot;);
vars.put(&quot;serviceOrderHeader_domainCode&quot;, &quot;${domainCode}&quot;);
</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create Service Order" enabled="true">
            <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceOrder\Fragement_CreateServiceOrderHeader.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="2.007 - Create Service Order line" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Create Service Order line" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="script">vars.put(&quot;serviceOrderLine_serviceOrderNumber&quot;, &quot;${serviceOrderNumber}&quot;);
vars.put(&quot;serviceOrderLine_domainCode&quot;, &quot;${domainCode}&quot;);
vars.put(&quot;serviceOrderLine_itemCode&quot;, &quot;02002&quot;);
vars.put(&quot;serviceOrderLine_serial&quot;, &quot;${lotSerial}&quot;);
</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create Service Order line" enabled="true">
            <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceOrder\Fragement_CreateServiceOrderLine.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="2.008 - Create SAR Header" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Create SAR Header" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="script">vars.put(&quot;serviceActivityReport_serviceOrderNumber&quot;, &quot;${serviceOrderNumber}&quot;);
vars.put(&quot;serviceActivityReport_lineNumber&quot;, &quot;${output_serviceOrderLine_NewServiceOrderLine}&quot;);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create SAR Header" enabled="true">
            <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceActivityReport\Fragement_ServiceActivityReportHeader_Create.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="2.009 - Create SAR labour" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Create SAR labour" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="script">vars.put(&quot;sarRouteLabor_serviceOrderNumber&quot;, &quot;${serviceOrderNumber}&quot;);
vars.put(&quot;sarRouteLabor_reportID&quot;, &quot;${reportID}&quot;);
vars.put(&quot;sarRouteLabor_actualRunTime&quot;, &quot;1&quot;);
vars.put(&quot;sarRouteLabor_netPrice&quot;, &quot;100&quot;);
vars.put(&quot;sarRouteLabor_coveredAmount&quot;, &quot;100&quot;);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create SAR labour" enabled="true">
            <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceActivityReport\Fragement_sarRouteLabor_Create.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="2.010 - Process SAR" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Process SAR" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="script">vars.put(&quot;serviceActivityReport_serviceOrderNumber&quot;, &quot;${serviceOrderNumber}&quot;);
vars.put(&quot;serviceActivityReport_reportID&quot;, &quot;${reportID}&quot;);
vars.put(&quot;serviceActivityReport_serviceOrderLine&quot;, &quot;${output_serviceOrderLine_NewServiceOrderLine}&quot;);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Process SAR" enabled="true">
            <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceActivityReport\Fragement_ServiceActivityReportHeader_Process.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="2.011 - Delete the End User" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Set value for delete End User" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="script">vars.put(&quot;endUser_contractNumber&quot;,&quot;${nextContractNbr}&quot;); 
vars.put(&quot;endUser_endUserCode&quot;,&quot;10C1001&quot;);
vars.put(&quot;endUser_error&quot;,&quot;Delete not allowed.  Coverage limit amounts used/consumed.&quot;);
</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete End User" enabled="true">
            <stringProp name="IncludeController.includepath">../../TestFragement\ServiceContract\Fragement_EndUser_Delete.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="2.012 - Delete Header" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Delete Header" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="script">vars.put(&quot;serviceContract_url_serviceContractNumber&quot;, &quot;${nextContractNbr}&quot;);
vars.put(&quot;serviceContract_error&quot;, &quot;Delete not allowed.  Coverage limit amounts used/consumed.&quot;);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete Header" enabled="true">
            <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_ContractHeader delete.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
