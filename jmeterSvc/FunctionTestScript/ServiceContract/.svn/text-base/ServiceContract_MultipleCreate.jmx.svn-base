<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1 r1853635">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="JFT_ServiceContract_003_TaxCalculate" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="domain" elementType="Argument">
            <stringProp name="Argument.name">domain</stringProp>
            <stringProp name="Argument.value">10USA</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="server" elementType="Argument">
            <stringProp name="Argument.name">server</stringProp>
            <stringProp name="Argument.value">suitcase.qad.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="tomcatPort" elementType="Argument">
            <stringProp name="Argument.name">tomcatPort</stringProp>
            <stringProp name="Argument.value">22010</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="webapp" elementType="Argument">
            <stringProp name="Argument.name">webapp</stringProp>
            <stringProp name="Argument.value">qad-central</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CustomerQuoteNumber" elementType="Argument">
            <stringProp name="Argument.name">CustomerQuoteNumber</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="JFT_ServiceContract_003_TaxCalculate" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1479226785000</longProp>
        <longProp name="ThreadGroup.end_time">1479226785000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Error validations on fields update</stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="domainCode" elementType="Argument">
              <stringProp name="Argument.name">domainCode</stringProp>
              <stringProp name="Argument.value">10USA</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="SetUpEnvironment" enabled="true">
          <stringProp name="filename">..\..\CSV\LogIn.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1.001 - Web UI - LogIn" enabled="true">
          <stringProp name="IncludeController.includepath">../../TestFragement/Common/Login-Fragment.jmx</stringProp>
        </IncludeController>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="Content-Type" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">~/log/${__TestPlanName}_${__time(YMDHMS)}.xml</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree errors only" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="1.002 Loop create header and line" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">CSV/ServiceContract_MultipleCreate.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">false</boolProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">CaseNumber</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Case ${CaseNumber}" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Create Header" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.002 - Create Service Contract Header" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Set value for create header" enabled="true">
                  <stringProp name="scriptLanguage">javascript</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="script">vars.put(&quot;serviceContract_customerCode&quot;, &quot;${customerCode}&quot;);
vars.put(&quot;serviceContract_serviceType&quot;, &quot;${serviceType}&quot;);
vars.put(&quot;serviceContract_siteCode&quot;, &quot;${siteCode}&quot;);
vars.put(&quot;serviceContract_purchaseOrder&quot;, &quot;jmeter&quot;);
vars.put(&quot;serviceContract_startDate&quot;, &quot;${startDate}&quot;+&quot;T00:00:00.000Z&quot;);
vars.put(&quot;serviceContract_endDate&quot;, &quot;${endDate}&quot;+&quot;T00:00:00.000Z&quot;);
vars.put(&quot;serviceContract_billingCycle&quot;, &quot;${billingCycle}&quot;);
vars.put(&quot;serviceContract_revenueType&quot;, &quot;${revenueType}&quot;);
vars.put(&quot;serviceContract_isBillArrears&quot;, ${isBillArrears});
vars.put(&quot;serviceContract_isPeriodBasedBilling&quot;, ${isPeriodBasedBilling});
vars.put(&quot;serviceContract_isProratePartialPeriods&quot;, ${isProratePartialPeriods});
vars.put(&quot;serviceContract_discountPercentage&quot;, ${discountPercentage});</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1.002 - Create Service Contract Header-001-Create" enabled="true">
                  <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_CreateServiceContractHeader.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.006 Header Save" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Header Save" enabled="true">
                  <stringProp name="scriptLanguage">javascript</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="script">vars.put(&quot;serviceContract_update_i_isProcessContractSummary&quot;, 1);
vars.put(&quot;serviceContract_update_i_isProcessPostTrailer&quot;, 1);
vars.put(&quot;serviceContract_contract&quot;, &quot;${nextContractNbr}&quot;);
vars.put(&quot;serviceContract_prefix&quot;, &quot;C&quot;);
vars.put(&quot;serviceContract_uri&quot;, &quot;urn:be:com.qad.service.contract.IServiceContractHeader&quot;);
//vars.put(&quot;serviceContract_update_s_revenueType&quot;, &quot;${revenueType}&quot;);
//vars.put(&quot;serviceContract_update_s_billingCycle&quot;, &quot;${billingCycle}&quot;);</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Header Save" enabled="true">
                  <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_ServiceContractHeader_Save.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TODO: Create End User" enabled="false">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.003 Create End User 10c1001" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Create End User" enabled="true">
                  <stringProp name="scriptLanguage">javascript</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="script">vars.put(&quot;endUser_endUserCode&quot;, &quot;10c1001&quot;);
//vars.put(&quot;endUser_currencyCode&quot;, &quot;USD&quot;);
</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create End User" enabled="true">
                  <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_CreateEndUser.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.005 Header Fetch" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Header Fetch" enabled="true">
                  <stringProp name="scriptLanguage">javascript</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="script">vars.put(&quot;serviceContract_contract&quot;, &quot;${nextContractNbr}&quot;);</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Header Fetch" enabled="true">
                  <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_ServiceContractHeader_Fetch.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="create line ${supportItem} ${nextContractNbr}" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Create Line ${supportItem} ${lotSerial}" enabled="true">
                <stringProp name="IfController.condition">${__jexl3(&quot;${type}&quot; == &quot;Line&quot;)}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Create Contract Line ${supportItem} " enabled="true">
                  <stringProp name="scriptLanguage">javascript</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="script">vars.put(&quot;contractLine_endUserNumber&quot;, &quot;${endUser}&quot;);
vars.put(&quot;contractLine_supportedItem&quot;, &quot;${supportItem}&quot;);
vars.put(&quot;contractLine_currencyCode&quot;, &quot;${currencyCode}&quot;);
vars.put(&quot;contractLine_itemQuantity&quot;, &quot;${quantity}&quot;);
vars.put(&quot;contractLine_serviceType&quot;, &quot;${serviceType}&quot;);
vars.put(&quot;contractLine_startDate&quot;, &quot;${startDate_line}&quot;+&quot;T00:00:00.000Z&quot;);
vars.put(&quot;contractLine_endDate&quot;, &quot;${endDate_line}&quot;+&quot;T00:00:00.000Z&quot;);
vars.put(&quot;contractLine_netPrice&quot;, ${netPrice});
vars.put(&quot;contractLine_lotSerial&quot;, &quot;${__time()}&quot;);


vars.put(&quot;contractLine_update_s_billingCycle&quot;, &quot;${billingCycle_line}&quot;);


//Sales Account
vars.put(&quot;contractLine_update_s_salesAccount&quot;, &quot;${salesAccount}&quot;);
vars.put(&quot;contractLine_update_s_salesSubAccount&quot;, &quot;${salesSubAccount}&quot;);
vars.put(&quot;contractLine_update_s_costCentre&quot;, &quot;${costCentre}&quot;);
vars.put(&quot;contractLine_update_s_project&quot;, &quot;${project}&quot;);
//discount account
vars.put(&quot;contractLine_update_s_discountAccount&quot;, &quot;${discountAccount}&quot;);
vars.put(&quot;contractLine_update_s_discountSubAccount&quot;, &quot;${discountSubAccount}&quot;);
vars.put(&quot;contractLine_update_s_discountCostCentre&quot;, &quot;${discountCostCentre}&quot;);
vars.put(&quot;contractLine_update_s_discountProject&quot;, &quot;${discountProject}&quot;);
//revenue account
vars.put(&quot;contractLine_update_s_revenueAccount&quot;, &quot;${revenueAccount}&quot;);
vars.put(&quot;contractLine_update_s_revenueSubAccount&quot;, &quot;${revenueSubAccount}&quot;);
vars.put(&quot;contractLine_update_s_revenueCostCentre&quot;, &quot;${revenueCostCentre}&quot;);



//Tax 
//vars.put(&quot;contractLine_isTaxable&quot;, ${isTaxable});
//vars.put(&quot;contractLine_taxClass&quot;, &quot;${taxClass}&quot;);
//vars.put(&quot;contractLine_taxUsage&quot;, &quot;${taxUsage}&quot;);
//vars.put(&quot;contractLine_isTaxIn&quot;, ${isTaxIn});
//vars.put(&quot;contractLine_taxEnvironment&quot;, &quot;${taxEnvironment}&quot;);



</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create Contract Line ${supportItem} " enabled="true">
                  <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_CreateContractLine.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="todo: additional charge ${supportItem}" enabled="false">
                <stringProp name="IfController.condition">${__jexl3(&quot;${type}&quot; == &quot;AdditionalCharge&quot;)}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="create additional charge ${endUser} ${supportItem}" enabled="true">
                  <stringProp name="scriptLanguage">javascript</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="script">vars.put(&quot;additionalCharge_contractNumber&quot;, &quot;${nextContractNbr}&quot;);
vars.put(&quot;additionalCharge_endUserCode&quot;, &quot;${endUser}&quot;);
vars.put(&quot;additionalCharge_itemCode&quot;, &quot;${supportItem}&quot;);
vars.put(&quot;additionalCharge_itemQuantity&quot;, &quot;${quantity}&quot;);
//vars.put(&quot;contractLine_serviceType&quot;, &quot;STD&quot;);
vars.put(&quot;additionalCharge_startDate&quot;, &quot;${startDate}&quot;+&quot;T00:00:00.000Z&quot;);
vars.put(&quot;additionalCharge_endDate&quot;, &quot;${endDate}&quot;+&quot;T00:00:00.000Z&quot;);
vars.put(&quot;additionalCharge_netPrice&quot;, ${netPrice});
vars.put(&quot;additionalCharge_isTaxable&quot;, ${isTaxable});
vars.put(&quot;additionalCharge_taxClass&quot;, &quot;${taxClass}&quot;);
vars.put(&quot;additionalCharge_taxUsage&quot;, &quot;${taxUsage}&quot;);
vars.put(&quot;additionalCharge_isTaxIncluded&quot;, ${isTaxIn});
vars.put(&quot;additionalCharge_taxEnvironment&quot;, &quot;${taxEnvironment}&quot;);
//contractLine
</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="create additional charge ${endUser} ${supportItem}" enabled="true">
                  <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_CreateAdditionalCharge.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="final save Header" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Header Fetch" enabled="true"/>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Header Fetch" enabled="true">
                    <stringProp name="scriptLanguage">javascript</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script">vars.put(&quot;serviceContract_contract&quot;, &quot;${nextContractNbr}&quot;);</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Header Fetch" enabled="true">
                    <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_ServiceContractHeader_Fetch.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Header Save" enabled="true"/>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Header Save" enabled="true">
                    <stringProp name="scriptLanguage">javascript</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script">vars.put(&quot;serviceContract_update_i_isProcessContractSummary&quot;, 1);
vars.put(&quot;serviceContract_update_i_isProcessPostTrailer&quot;, 1);
vars.put(&quot;serviceContract_contract&quot;, &quot;${nextContractNbr}&quot;);
vars.put(&quot;serviceContract_prefix&quot;, &quot;C&quot;);
vars.put(&quot;serviceContract_uri&quot;, &quot;urn:be:com.qad.service.contract.IServiceContractHeader&quot;);</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Header Save" enabled="true">
                    <stringProp name="IncludeController.includepath">..\..\TestFragement\ServiceContract\Fragement_ServiceContractHeader_Save.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
