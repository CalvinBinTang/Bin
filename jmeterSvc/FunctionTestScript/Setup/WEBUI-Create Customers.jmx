<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">../../CSV/LogIn.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">${tomcatPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="Content-Type" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree errors only" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Login" enabled="true">
          <stringProp name="TestPlan.comments">Call a generic login test fragment</stringProp>
          <stringProp name="IncludeController.includepath">..\..\TestFragement\Common\Login-Fragment.jmx</stringProp>
        </IncludeController>
        <hashTree/>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
          <stringProp name="TestPlan.comments">Loop until the value of $Customer is &lt;EOF&gt; i.e. All rows of in the CSV file have been read.</stringProp>
          <stringProp name="WhileController.condition">${__javaScript(&quot;${customerCode}&quot; != &quot;&lt;EOF&gt;&quot;,)}</stringProp>
        </WhileController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">../../FunctionTestScript/Setup/CSV/customer-create1.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">false</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.thread</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">&quot;${customerCode}&quot; != &quot;&lt;EOF&gt;&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Customer- Create- ${customerCode}" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01-Customer- Initialize" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="initialize" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">initialize</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/qad-central/api/erp/customers</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${protocol}://${server}:${tomcatPort}/${webapp}/?menu=none&amp;sessionid=null&amp;ifrl=2</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${protocol}://${server}:${tomcatPort}</stringProp>
                    </elementProp>
                    <elementProp name="x-qadcalluid" elementType="Header">
                      <stringProp name="Header.name">x-qadcalluid</stringProp>
                      <stringProp name="Header.value">0f5ad93d-7922-43e5-b52f-29185db4dfbc</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="X-Requested-With" elementType="Header">
                      <stringProp name="Header.name">X-Requested-With</stringProp>
                      <stringProp name="Header.value">XMLHttpRequest</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Response" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">RequestData</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">NONE</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Shareset ID" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">sharedDatasetID</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.customers[0].sharedSetID</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Shareset Code" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">sharedSetCode</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.customers[0].sharedSetCode</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02-Validate Customer Exists" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="sharedSetCode" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">sharedSetCode</stringProp>
                      <stringProp name="Argument.value">${sharedSetCode}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="customerCode" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${customerCode}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">customerCode</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/qad-central/api/erp/customers/exists</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${protocol}://${server}:${tomcatPort}/${webapp}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${protocol}://${server}:${tomcatPort}</stringProp>
                    </elementProp>
                    <elementProp name="x-qadcalluid" elementType="Header">
                      <stringProp name="Header.name">x-qadcalluid</stringProp>
                      <stringProp name="Header.value">0f5ad93d-7922-43e5-b52f-29185db4dfbc</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="X-Requested-With" elementType="Header">
                      <stringProp name="Header.name">X-Requested-With</stringProp>
                      <stringProp name="Header.value">XMLHttpRequest</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
                  <stringProp name="JSON_PATH">$.isFound</stringProp>
                  <stringProp name="EXPECTED_VALUE">false</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03-Input Business Relation Code" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="businessRelationCode" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">businessRelationCode</stringProp>
                      <stringProp name="Argument.value">${businessRelationCode}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/qad-central/api/erp/businessRelations</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${protocol}://${server}:${tomcatPort}/${webapp}/?menu=none&amp;sessionid=null&amp;ifrl=2</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${protocol}://${server}:${tomcatPort}</stringProp>
                    </elementProp>
                    <elementProp name="x-qadcalluid" elementType="Header">
                      <stringProp name="Header.name">x-qadcalluid</stringProp>
                      <stringProp name="Header.value">0f5ad93d-7922-43e5-b52f-29185db4dfbc</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="X-Requested-With" elementType="Header">
                      <stringProp name="Header.name">X-Requested-With</stringProp>
                      <stringProp name="Header.value">XMLHttpRequest</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="addressID" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">addressID</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.address[0].addressID</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">NONE</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">businessRelationID</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.businessRelations[0].businessRelationID</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="taxZone" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">taxZone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.address[0].taxZone</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">NONE</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="addressSearchName" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">addressSearchName</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.address[0].addressSearchName</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">NONE</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="addressName" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">addressName</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.address[0].addressName</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">NONE</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="businessRelationName" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">businessRelationName</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.businessRelations[0].businessRelationName1</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="city" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">city</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.address[0].city</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">NONE</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04-Create" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;supplementaryMessages&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;customers&quot;: [&#xd;
    {&#xd;
      &quot;uri&quot;: &quot;urn:be:com.qad.base.customer.ICustomer:${sharedDatasetID}.${customerCode}&quot;,&#xd;
      &quot;customerSafDefaults&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;customerContacts&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;disallowedActionsMessage&quot;: &quot;&quot;,&#xd;
      &quot;disallowedActions&quot;: &quot;&quot;,&#xd;
      &quot;currencyCode&quot;: &quot;USD&quot;,&#xd;
      &quot;languageDescription&quot;: &quot;english (U.S.)&quot;,&#xd;
      &quot;taxZone&quot;: &quot;${taxZone}&quot;,&#xd;
      &quot;addressName&quot;: &quot;${addressName}&quot;,&#xd;
      &quot;addressSearchName&quot;: &quot;${addressSearchName}&quot;,&#xd;
      &quot;isActive&quot;: ${isActive},&#xd;
      &quot;sharedSetID&quot;: ${sharedDatasetID},&#xd;
      &quot;postalFormat&quot;: &quot;After&quot;,&#xd;
      &quot;corporateGroupCode&quot;: &quot;&quot;,&#xd;
      &quot;stateCode&quot;: &quot;&quot;,&#xd;
      &quot;customerCode&quot;: &quot;${customerCode}&quot;,&#xd;
      &quot;languageCode&quot;: &quot;us&quot;,&#xd;
      &quot;businessRelationCode&quot;: &quot;${businessRelationCode}&quot;,&#xd;
      &quot;customerTypeCode&quot;: &quot;&quot;,&#xd;
      &quot;countryCode&quot;: &quot;USA&quot;,&#xd;
      &quot;creditTermsCode&quot;: &quot;${creditTerm}&quot;,&#xd;
      &quot;creditTermsDescription&quot;: &quot;&quot;,&#xd;
      &quot;countyCode&quot;: &quot;&quot;,&#xd;
      &quot;dataOperation&quot;: &quot;&quot;,&#xd;
      &quot;concurrencyHash&quot;: &quot;&quot;,&#xd;
      &quot;businessRelationName&quot;: &quot;${businessRelationName}&quot;,&#xd;
      &quot;paymentGroupCode&quot;: &quot;&quot;,&#xd;
      &quot;city&quot;: &quot;${city}&quot;,&#xd;
      &quot;customDecimal0&quot;: 0,&#xd;
      &quot;customDecimal1&quot;: 0,&#xd;
      &quot;customDecimal2&quot;: 0,&#xd;
      &quot;customDecimal3&quot;: 0,&#xd;
      &quot;customDecimal4&quot;: 0,&#xd;
      &quot;customInteger0&quot;: 0,&#xd;
      &quot;customInteger1&quot;: 0,&#xd;
      &quot;customInteger2&quot;: 0,&#xd;
      &quot;customInteger3&quot;: 0,&#xd;
      &quot;customInteger4&quot;: 0,&#xd;
      &quot;customLong0&quot;: &quot;&quot;,&#xd;
      &quot;customLong1&quot;: &quot;&quot;,&#xd;
      &quot;customNote&quot;: &quot;&quot;,&#xd;
      &quot;customShort0&quot;: &quot;&quot;,&#xd;
      &quot;customShort1&quot;: &quot;&quot;,&#xd;
      &quot;customShort2&quot;: &quot;&quot;,&#xd;
      &quot;customShort3&quot;: &quot;&quot;,&#xd;
      &quot;customShort4&quot;: &quot;&quot;,&#xd;
      &quot;customShort5&quot;: &quot;&quot;,&#xd;
      &quot;addressID&quot;: 0,&#xd;
      &quot;businessRelationID&quot;: 0,&#xd;
      &quot;lastModifiedUser&quot;: &quot;&quot;,&#xd;
      &quot;taxClass&quot;: &quot;&quot;,&#xd;
      &quot;isTaxable&quot;: ${isTaxable},&#xd;
      &quot;currencyDescription&quot;: &quot;US Dollar&quot;,&#xd;
      &quot;countryDescription&quot;: &quot;USA - TAX PURPOSE&quot;,&#xd;
      &quot;currencyID&quot;: &quot;${currency}&quot;,&#xd;
      &quot;isTaxIncluded&quot;: false,&#xd;
      &quot;customShort6&quot;: &quot;&quot;,&#xd;
      &quot;customShort7&quot;: &quot;&quot;,&#xd;
      &quot;customShort8&quot;: &quot;&quot;,&#xd;
      &quot;customShort9&quot;: &quot;&quot;,&#xd;
      &quot;customShort10&quot;: &quot;&quot;,&#xd;
      &quot;customShort11&quot;: &quot;&quot;,&#xd;
      &quot;customShort12&quot;: &quot;&quot;,&#xd;
      &quot;customShort13&quot;: &quot;&quot;,&#xd;
      &quot;customShort14&quot;: &quot;&quot;,&#xd;
      &quot;customShort15&quot;: &quot;&quot;,&#xd;
      &quot;customShort16&quot;: &quot;&quot;,&#xd;
      &quot;customShort17&quot;: &quot;&quot;,&#xd;
      &quot;customShort18&quot;: &quot;&quot;,&#xd;
      &quot;customShort19&quot;: &quot;&quot;,&#xd;
      &quot;zipCode&quot;: &quot;&quot;,&#xd;
      &quot;stateDescription&quot;: &quot;&quot;,&#xd;
      &quot;countyDescription&quot;: &quot;&quot;,&#xd;
      &quot;telephone&quot;: &quot;&quot;,&#xd;
      &quot;fax&quot;: &quot;&quot;,&#xd;
      &quot;EMail&quot;: &quot;&quot;,&#xd;
      &quot;webSite&quot;: &quot;&quot;,&#xd;
      &quot;street1&quot;: &quot;&quot;,&#xd;
      &quot;street2&quot;: &quot;&quot;,&#xd;
      &quot;street3&quot;: &quot;&quot;,&#xd;
      &quot;federalTax&quot;: &quot;&quot;,&#xd;
      &quot;isTaxInCity&quot;: true,&#xd;
      &quot;stateTax&quot;: &quot;&quot;,&#xd;
      &quot;miscellaneousTax1&quot;: &quot;&quot;,&#xd;
      &quot;miscellaneousTax2&quot;: &quot;&quot;,&#xd;
      &quot;miscellaneousTax3&quot;: &quot;&quot;,&#xd;
      &quot;taxDeclaration&quot;: 0,&#xd;
      &quot;taxZoneDescription&quot;: &quot;&quot;,&#xd;
      &quot;taxClassDescription&quot;: &quot;&quot;,&#xd;
      &quot;taxUsage&quot;: &quot;&quot;,&#xd;
      &quot;taxUsageDescription&quot;: &quot;&quot;,&#xd;
      &quot;isTemporaryAddress&quot;: false,&#xd;
      &quot;isMfgAddressRequired&quot;: false,&#xd;
      &quot;isForMultiDomain&quot;: false,&#xd;
      &quot;customerID&quot;: 0,&#xd;
      &quot;sharedSetCode&quot;: &quot;${sharedSetCode}&quot;,&#xd;
      &quot;languageID&quot;: 28,&#xd;
      &quot;businessRelationConcurrencyHash&quot;: &quot;&quot;,&#xd;
      &quot;addressConcurrencyHash&quot;: &quot;&quot;,&#xd;
      &quot;corporateGroupID&quot;: 0,&#xd;
      &quot;reminderCountyDescription&quot;: &quot;&quot;,&#xd;
      &quot;reminderAddressID&quot;: 0,&#xd;
      &quot;reminderAddressName&quot;: &quot;&quot;,&#xd;
      &quot;reminderAddressSearchName&quot;: &quot;&quot;,&#xd;
      &quot;reminderBusinessRelationCode&quot;: &quot;&quot;,&#xd;
      &quot;reminderBusinessRelationID&quot;: 0,&#xd;
      &quot;reminderCity&quot;: &quot;&quot;,&#xd;
      &quot;reminderZipCode&quot;: &quot;&quot;,&#xd;
      &quot;reminderStateCode&quot;: &quot;&quot;,&#xd;
      &quot;reminderStateDescription&quot;: &quot;&quot;,&#xd;
      &quot;reminderCountyCode&quot;: &quot;&quot;,&#xd;
      &quot;reminderTelephone&quot;: &quot;&quot;,&#xd;
      &quot;reminderFax&quot;: &quot;&quot;,&#xd;
      &quot;reminderEMail&quot;: &quot;&quot;,&#xd;
      &quot;reminderWebSite&quot;: &quot;&quot;,&#xd;
      &quot;reminderCountryCode&quot;: &quot;&quot;,&#xd;
      &quot;reminderCountryDescription&quot;: &quot;&quot;,&#xd;
      &quot;reminderLanguageCode&quot;: &quot;&quot;,&#xd;
      &quot;reminderLanguageDescription&quot;: &quot;&quot;,&#xd;
      &quot;reminderStreet1&quot;: &quot;&quot;,&#xd;
      &quot;reminderStreet2&quot;: &quot;&quot;,&#xd;
      &quot;reminderStreet3&quot;: &quot;&quot;,&#xd;
      &quot;reminderFederalTax&quot;: &quot;&quot;,&#xd;
      &quot;reminderIsTaxInCity&quot;: false,&#xd;
      &quot;reminderIsTaxIncluded&quot;: false,&#xd;
      &quot;reminderStateTax&quot;: &quot;&quot;,&#xd;
      &quot;reminderMiscellaneousTax1&quot;: &quot;&quot;,&#xd;
      &quot;reminderMiscellaneousTax2&quot;: &quot;&quot;,&#xd;
      &quot;reminderMiscellaneousTax3&quot;: &quot;&quot;,&#xd;
      &quot;reminderTaxDeclaration&quot;: 0,&#xd;
      &quot;reminderTaxZone&quot;: &quot;&quot;,&#xd;
      &quot;reminderTaxZoneDescription&quot;: &quot;&quot;,&#xd;
      &quot;reminderTaxClass&quot;: &quot;&quot;,&#xd;
      &quot;reminderTaxClassDescription&quot;: &quot;&quot;,&#xd;
      &quot;reminderTaxUsage&quot;: &quot;&quot;,&#xd;
      &quot;reminderTaxUsageDescription&quot;: &quot;&quot;,&#xd;
      &quot;reminderPostalFormat&quot;: &quot;&quot;,&#xd;
      &quot;reminderIsTemporaryAddress&quot;: false,&#xd;
      &quot;reminderIsMfgAddressRequired&quot;: false,&#xd;
      &quot;reminderIsForMultiDomain&quot;: false,&#xd;
      &quot;isBusinessRelationActive&quot;: true,&#xd;
      &quot;isBusinessRelationIntercompany&quot;: false,&#xd;
      &quot;billToCustomerID&quot;: 0,&#xd;
      &quot;billToCustomerCode&quot;: &quot;&quot;,&#xd;
      &quot;billToCustomerDescription&quot;: &quot;&quot;,&#xd;
      &quot;invoiceControlGLProfileID&quot;: 0,&#xd;
      &quot;invoiceControlGLProfileCode&quot;: &quot;${controlGLInvoice}&quot;,&#xd;
      &quot;invoiceControlGLProfileDesc&quot;: &quot;&quot;,&#xd;
      &quot;creditNoteControlGLProfileID&quot;: 0,&#xd;
      &quot;creditNoteControlGLProfileCode&quot;: &quot;${controlGLCreditNote}&quot;,&#xd;
      &quot;creditNoteControlGLProfileDesc&quot;: &quot;&quot;,&#xd;
      &quot;prePaymentControlGLProfileID&quot;: 0,&#xd;
      &quot;prePaymentControlGLProfileCode&quot;: &quot;${controlGLPrepayment}&quot;,&#xd;
      &quot;prePaymentControlGLProfileDesc&quot;: &quot;&quot;,&#xd;
      &quot;deductionControlGLProfileID&quot;: 0,&#xd;
      &quot;deductionControlGLProfileCode&quot;: &quot;&quot;,&#xd;
      &quot;deductionControlGLProfileDesc&quot;: &quot;&quot;,&#xd;
      &quot;salesAccountGLProfileID&quot;: 0,&#xd;
      &quot;salesAccountGLProfileCode&quot;: &quot;${salesAccount}&quot;,&#xd;
      &quot;salesAccountGLProfileDesc&quot;: &quot;&quot;,&#xd;
      &quot;financeChargeGLProfileID&quot;: 0,&#xd;
      &quot;financeChargeGLProfileCode&quot;: &quot;&quot;,&#xd;
      &quot;financeChargeGLProfileDesc&quot;: &quot;&quot;,&#xd;
      &quot;subAccountProfileID&quot;: 0,&#xd;
      &quot;subAccountProfileCode&quot;: &quot;&quot;,&#xd;
      &quot;subAccountProfileDesc&quot;: &quot;&quot;,&#xd;
      &quot;customerTypeID&quot;: 0,&#xd;
      &quot;customerTypeDescription&quot;: &quot;&quot;,&#xd;
      &quot;creditTermsID&quot;: 0,&#xd;
      &quot;creditTermsType&quot;: &quot;&quot;,&#xd;
      &quot;invoiceStatusID&quot;: 0,&#xd;
      &quot;invoiceStatusCode&quot;: &quot;${invoiceStatusCode}&quot;,&#xd;
      &quot;invoiceStatusDescription&quot;: &quot;&quot;,&#xd;
      &quot;paymentGroupID&quot;: 0,&#xd;
      &quot;paymentGroupDescription&quot;: &quot;&quot;,&#xd;
      &quot;billingScheduleID&quot;: 0,&#xd;
      &quot;billingScheduleCode&quot;: &quot;&quot;,&#xd;
      &quot;billingScheduleDescription&quot;: &quot;&quot;,&#xd;
      &quot;billCollectorID&quot;: 0,&#xd;
      &quot;billCollectorCode&quot;: &quot;&quot;,&#xd;
      &quot;billCollectorDescription&quot;: &quot;&quot;,&#xd;
      &quot;isInvoiceByAuthorization&quot;: false,&#xd;
      &quot;isFinanceCharge&quot;: false,&#xd;
      &quot;statementCycle&quot;: &quot;&quot;,&#xd;
      &quot;isPrintReminder&quot;: false,&#xd;
      &quot;isPrintStatement&quot;: false,&#xd;
      &quot;isPrintBillWithItemDetails&quot;: false,&#xd;
      &quot;isFixedCreditLimit&quot;: false,&#xd;
      &quot;fixedCreditLimit&quot;: 0,&#xd;
      &quot;isTurnOverCreditLimit&quot;: false,&#xd;
      &quot;turnoverCreditLimitPercent&quot;: 0,&#xd;
      &quot;isMaxDaysOverdueCreditLimit&quot;: false,&#xd;
      &quot;maxDaysCreditLimit&quot;: 0,&#xd;
      &quot;creditAgencyReference&quot;: &quot;&quot;,&#xd;
      &quot;isToBeLockedCreditLimit&quot;: false,&#xd;
      &quot;isLockedCreditLimit&quot;: false,&#xd;
      &quot;creditRatingID&quot;: 0,&#xd;
      &quot;creditRatingCode&quot;: &quot;&quot;,&#xd;
      &quot;isIncludeSOCheckCreditLimit&quot;: false,&#xd;
      &quot;isIncludeOpenItemsCreditLimit&quot;: false,&#xd;
      &quot;isIncludeDraftCreditLimit&quot;: false,&#xd;
      &quot;isCheckBeforeSOCreditLimit&quot;: false,&#xd;
      &quot;isCheckAfterSOCreditLimit&quot;: false,&#xd;
      &quot;isOverruleAllowedSOCreditLimit&quot;: true,&#xd;
      &quot;isCheckBeforeInvoiceCreditLimit&quot;: false,&#xd;
      &quot;isCheckAfterInvoiceCreditLimit&quot;: false,&#xd;
      &quot;isOverAllowedInvoiceCreditLimit&quot;: false,&#xd;
      &quot;warningCreditLimitPercent&quot;: 0,&#xd;
      &quot;highCredit&quot;: 0,&#xd;
      &quot;corporateGroupDescription&quot;: &quot;&quot;,&#xd;
      &quot;commentNote&quot;: &quot;&quot;,&#xd;
      &quot;vatDeliveryType&quot;: &quot;SERVICE&quot;,&#xd;
      &quot;vatPercentageLevel&quot;: &quot;NONE&quot;,&#xd;
      &quot;domiciliationNumber&quot;: 0,&#xd;
      &quot;isWithPreInvoiceGroup&quot;: false,&#xd;
      &quot;salesOrderBalance&quot;: 0,&#xd;
      &quot;totalDaysLate&quot;: 0,&#xd;
      &quot;totalNumberOfInvoices&quot;: 0,&#xd;
      &quot;isDomainRestricted&quot;: false,&#xd;
      &quot;isCompensationAllowed&quot;: false,&#xd;
      &quot;isInternalEntity&quot;: false,&#xd;
      &quot;isTaxReport&quot;: false,&#xd;
      &quot;isLastFiling&quot;: false,&#xd;
      &quot;intercompanyCode&quot;: &quot;&quot;,&#xd;
      &quot;nameControl&quot;: &quot;&quot;,&#xd;
      &quot;isCreateBusinessRelationRequired&quot;: false,&#xd;
      &quot;overToleranceAmount&quot;: 0,&#xd;
      &quot;overTolerancePercent&quot;: 0,&#xd;
      &quot;shortToleranceAmount&quot;: 0,&#xd;
      &quot;shortTolerancePercent&quot;: 0,&#xd;
      &quot;isElectronicInvoiceIN&quot;: false,&#xd;
      &quot;isReportedIN&quot;: false,&#xd;
      &quot;isToleranceFromOwnBank&quot;: false,&#xd;
      &quot;deferredRevRecGLProfileID&quot;: 0,&#xd;
      &quot;deferredRevRecGLProfileCode&quot;: &quot;&quot;,&#xd;
      &quot;deferredRevRecGLProfileDesc&quot;: &quot;&quot;,&#xd;
      &quot;revRecRuleID&quot;: 0,&#xd;
      &quot;revRecRuleCode&quot;: &quot;&quot;,&#xd;
      &quot;revRecRuleDesc&quot;: &quot;&quot;,&#xd;
      &quot;accruedRevRecGLProfileID&quot;: 0,&#xd;
      &quot;accruedRevRecGLProfileCode&quot;: &quot;&quot;,&#xd;
      &quot;accruedRevRecGLProfileDesc&quot;: &quot;&quot;,&#xd;
      &quot;isAutoCreateRevRecContracts&quot;: false,&#xd;
      &quot;reminderAddressTypeCode&quot;: &quot;REMINDER&quot;,&#xd;
      &quot;isReminderRequired&quot;: false,&#xd;
      &quot;reviewRequiredForContracts&quot;: &quot;&quot;,&#xd;
      &quot;reminderAddressConcurrencyHash&quot;: &quot;&quot;,&#xd;
      &quot;lastModifiedTime&quot;: 0&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/qad-central/api/erp/customers</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${protocol}://${server}:${tomcatPort}/${webapp}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${protocol}://${server}:${tomcatPort}</stringProp>
                    </elementProp>
                    <elementProp name="x-qadcalluid" elementType="Header">
                      <stringProp name="Header.name">x-qadcalluid</stringProp>
                      <stringProp name="Header.value">0f5ad93d-7922-43e5-b52f-29185db4dfbc</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="X-Requested-With" elementType="Header">
                      <stringProp name="Header.name">X-Requested-With</stringProp>
                      <stringProp name="Header.value">XMLHttpRequest</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
                  <stringProp name="JSON_PATH">$.submitResult.success</stringProp>
                  <stringProp name="EXPECTED_VALUE">true</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">true</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">customerID</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.customers[0].customerID</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">NONE</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05-Get Dayset  Request" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="domainContext" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">10USA</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">domainContext</stringProp>
                    </elementProp>
                    <elementProp name="siteCode" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">10-100</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">siteCode</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/qad-central/api/erp/mfgCustomers/getDefaultDaybookSet</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${protocol}://${server}:${tomcatPort}/${webapp}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${protocol}://${server}:${tomcatPort}</stringProp>
                    </elementProp>
                    <elementProp name="x-qadcalluid" elementType="Header">
                      <stringProp name="Header.name">x-qadcalluid</stringProp>
                      <stringProp name="Header.value">0f5ad93d-7922-43e5-b52f-29185db4dfbc</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="X-Requested-With" elementType="Header">
                      <stringProp name="Header.name">X-Requested-With</stringProp>
                      <stringProp name="Header.value">XMLHttpRequest</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Response" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">daybookSetCode</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.daybookSetCode</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">NONE</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugSampler>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06-Edit mfgCustomer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;mfgCustomers&quot;: [&#xd;
    {&#xd;
      &quot;uri&quot;: &quot;urn:be:com.qad.base.customer.IMfgCustomer:${domainCode}.${customerCode}&quot;,&#xd;
      &quot;customerAttributeDetails&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;federalTax&quot;: &quot;&quot;,&#xd;
      &quot;isTaxIncluded&quot;: false,&#xd;
      &quot;miscellaneousTax1&quot;: &quot;&quot;,&#xd;
      &quot;miscellaneousTax2&quot;: &quot;&quot;,&#xd;
      &quot;miscellaneousTax3&quot;: &quot;&quot;,&#xd;
      &quot;taxZone&quot;: &quot;USA-NJ&quot;,&#xd;
      &quot;taxClass&quot;: &quot;&quot;,&#xd;
      &quot;taxUsage&quot;: &quot;&quot;,&#xd;
      &quot;customerID&quot;: ${customerID},&#xd;
      &quot;remarks&quot;: &quot;&quot;,&#xd;
      &quot;isTaxable&quot;: true,&#xd;
      &quot;cmMstrUser1&quot;: &quot;&quot;,&#xd;
      &quot;cmMstrUser2&quot;: &quot;&quot;,&#xd;
      &quot;cmMstrChr01&quot;: &quot;&quot;,&#xd;
      &quot;cmMstrChr02&quot;: &quot;&quot;,&#xd;
      &quot;cmMstrChr03&quot;: &quot;&quot;,&#xd;
      &quot;cmMstrChr04&quot;: &quot;&quot;,&#xd;
      &quot;cmMstrChr05&quot;: &quot;&quot;,&#xd;
      &quot;cmMstrChr06&quot;: &quot;&quot;,&#xd;
      &quot;cmMstrChr07&quot;: &quot;&quot;,&#xd;
      &quot;cmMstrChr08&quot;: &quot;&quot;,&#xd;
      &quot;cmMstrChr09&quot;: &quot;&quot;,&#xd;
      &quot;cmMstrChr10&quot;: &quot;&quot;,&#xd;
      &quot;cmMstrLog01&quot;: false,&#xd;
      &quot;isReplicatingFinCustomer&quot;: false,&#xd;
      &quot;salesPerson2&quot;: &quot;&quot;,&#xd;
      &quot;salesPerson3&quot;: &quot;&quot;,&#xd;
      &quot;salesPerson4&quot;: &quot;&quot;,&#xd;
      &quot;resale&quot;: &quot;&quot;,&#xd;
      &quot;salesPerson1&quot;: &quot;&quot;,&#xd;
      &quot;isPartialOk&quot;: true,&#xd;
      &quot;customerClass&quot;: &quot;&quot;,&#xd;
      &quot;sicCode&quot;: &quot;&quot;,&#xd;
      &quot;rssCalendarOption&quot;: 1,&#xd;
      &quot;isCaptureSelfBillInfo&quot;: false,&#xd;
      &quot;isAutoCreatePayments&quot;: false,&#xd;
      &quot;isPORequired&quot;: false,&#xd;
      &quot;freightList&quot;: &quot;${freightList}&quot;,&#xd;
      &quot;minimumFreightWeight&quot;: 0,&#xd;
      &quot;emtType&quot;: &quot;NON-EMT&quot;,&#xd;
      &quot;customerShipLeadTime&quot;: 0,&#xd;
      &quot;isConfirmedEmtSO&quot;: false,&#xd;
      &quot;isEmtCreditFlow&quot;: false,&#xd;
      &quot;isCustItemRequired&quot;: false,&#xd;
      &quot;isConsolidateInvoices&quot;: false,&#xd;
      &quot;timeZoneCode&quot;: &quot;${timeZoneCode}&quot;,&#xd;
      &quot;billToCode&quot;: &quot;${billToCustomer}&quot;,&#xd;
      &quot;provincialSalesTaxID&quot;: &quot;&quot;,&#xd;
      &quot;isTaxInCity&quot;: true,&#xd;
      &quot;customerType&quot;: &quot;&quot;,&#xd;
      &quot;cmMstrDec01&quot;: 0,&#xd;
      &quot;cmMstrDec02&quot;: 0,&#xd;
      &quot;discountPercent&quot;: ${discountPercent},&#xd;
      &quot;discountTable&quot;: &quot;&quot;,&#xd;
      &quot;isFixedPrice&quot;: true,&#xd;
      &quot;isDataComplete&quot;: false,&#xd;
      &quot;blockedTransactionOID&quot;: 0,&#xd;
      &quot;nonSalesOrderPriceList&quot;: &quot;&quot;,&#xd;
      &quot;isInvoiceByAuthorization&quot;: false,&#xd;
      &quot;isActive&quot;: ${isActive},&#xd;
      &quot;siteCode&quot;: &quot;${domainSite}&quot;,&#xd;
      &quot;currencyCode&quot;: &quot;${currency}&quot;,&#xd;
      &quot;languageCode&quot;: &quot;us&quot;,&#xd;
      &quot;concurrencyHash&quot;: &quot;020010bUsgEl1gH7M78X89DvBYJA==&quot;,&#xd;
      &quot;domainContext&quot;: &quot;${domainCode}&quot;,&#xd;
      &quot;daybookSetCode&quot;: &quot;10-SALES&quot;,&#xd;
      &quot;customerCode&quot;: &quot;${customerCode}&quot;,&#xd;
      &quot;creditTermsCode&quot;: &quot;${creditTerm}&quot;,&#xd;
      &quot;shipVia&quot;: &quot;${shipVia}&quot;,&#xd;
      &quot;lastModifiedUser&quot;: &quot;&quot;,&#xd;
      &quot;freightTerms&quot;: &quot;&quot;,&#xd;
      &quot;region&quot;: &quot;&quot;,&#xd;
      &quot;lastSaleDate&quot;: null&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/qad-central/api/erp/mfgCustomers?domainContext=${domainCode}&amp;customerCode=${customerCode}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${protocol}://${server}:${tomcatPort}/${webapp}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${protocol}://${server}:${tomcatPort}</stringProp>
                    </elementProp>
                    <elementProp name="x-qadcalluid" elementType="Header">
                      <stringProp name="Header.name">x-qadcalluid</stringProp>
                      <stringProp name="Header.value">0f5ad93d-7922-43e5-b52f-29185db4dfbc</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="X-Requested-With" elementType="Header">
                      <stringProp name="Header.name">X-Requested-With</stringProp>
                      <stringProp name="Header.value">XMLHttpRequest</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Response" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">RequestMfg</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">NONE</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
